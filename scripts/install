#!/bin/bash

#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# SETUP DEX FOR OIDC
#=================================================
setup_dex

#=================================================
# INITIALIZE AND STORE SETTINGS
#=================================================

# If you need to, you can define custom settings
# (or remove this section entirely if not relevant for you)
redis_db=$(ynh_redis_get_free_db)
celery_redis_db=$(ynh_redis_get_free_db)
django_secret_key=$(ynh_string_random -l 32)
ynh_app_setting_set --key=redis_db --value=$redis_db
ynh_app_setting_set --key=celery_redis_db --value=$celery_redis_db
ynh_app_setting_set --key=django_secret_key --value=$django_secret_key

#=================================================
# INSTALL NODEJS
#=================================================

ynh_script_progression "Installing dependencies..."

ynh_nodejs_install

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_script_progression "Setting up source files..."

ynh_setup_source --dest_dir="$install_dir"

ynh_exec_as_app mkdir -p "$install_dir/_build/venv"
ynh_exec_as_app mkdir -p "$install_dir/_build/frontend"
ynh_exec_as_app mkdir -p "$install_dir/_build/data/static"

pushd "$install_dir/_build/venv"
  ynh_exec_as_app python3.11 -m venv .
  ynh_hide_warnings ynh_exec_as_app ./bin/pip3 install "$install_dir/src/backend"
  ynh_hide_warnings ynh_exec_as_app ./bin/pip3 freeze > requirements.txt
  ynh_hide_warnings ynh_exec_as_app ./bin/pip3 install -r requirements.txt
popd

pushd "$install_dir/src/backend"
  
  # Collect the static resources
  ynh_exec_as_app DATA_DIR="$install_dir/_build/data/static" DJANGO_CONFIGURATION=Build DJANGO_JWT_PRIVATE_SIGNING_KEY=Dummy \
    STATIC_ROOT="$install_dir/src/backend" \
    "$install_dir/_build/venv/bin/python" manage.py collectstatic --noinput
  rdfind -makesymlinks true -followsymlinks true -makeresultsfile false "$install_dir/_build/data/static"
  # Setup the database
  ynh_hide_warnings ynh_exec_as_app \
    DJANGO_CONFIGURATION=Production \
    DB_NAME=$db_name DB_USER=$db_name DB_PASSWORD=$db_pwd \
    "$install_dir/_build/venv/bin/python" manage.py migrate
popd

pushd "$install_dir/src/frontend"
  ynh_hide_warnings ynh_exec_as_app yarn install
  ynh_hide_warnings ynh_exec_as_app NODE_ENV=production yarn app:build
  mv ./apps/impress/out "$install_dir/_build/frontend"
popd


chown -R "$app:www-data" "$install_dir"

#=================================================
# APP INITIAL CONFIGURATION
#=================================================
ynh_script_progression "Adding $app's configuration files..."

ynh_config_add --template="env" --destination="$install_dir/.env"
chmod 400 "$install_dir/.env"
chown "$app:$app" "$install_dir/.env"

#=================================================
# SYSTEM CONFIGURATION
#=================================================
ynh_script_progression "Adding system configurations related to $app..."

ynh_config_add_nginx

# Create a dedicated systemd config
ynh_config_add_systemd

yunohost service add "$app" --description="Simple collaborative notetaking" --log="/var/log/$app/$app.log"

# Use logrotate to manage application logfile(s)
ynh_config_add_logrotate

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression "Starting $app's systemd service..."

# Start a systemd service
ynh_systemctl --service="$app" --action="start"

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression "Installation of $app completed"
